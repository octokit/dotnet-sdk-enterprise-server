// <auto-generated/>
using GitHub.Setup.Api.Configcheck;
using GitHub.Setup.Api.Configure;
using GitHub.Setup.Api.Maintenance;
using GitHub.Setup.Api.Settings;
using GitHub.Setup.Api.Start;
using GitHub.Setup.Api.Upgrade;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace GitHub.Setup.Api {
    /// <summary>
    /// Builds and executes requests for operations under \setup\api
    /// </summary>
    public class ApiRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>The configcheck property</summary>
        public ConfigcheckRequestBuilder Configcheck
        {
            get => new ConfigcheckRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The configure property</summary>
        public ConfigureRequestBuilder Configure
        {
            get => new ConfigureRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The maintenance property</summary>
        public MaintenanceRequestBuilder Maintenance
        {
            get => new MaintenanceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The settings property</summary>
        public SettingsRequestBuilder Settings
        {
            get => new SettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The start property</summary>
        public StartRequestBuilder Start
        {
            get => new StartRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The upgrade property</summary>
        public UpgradeRequestBuilder Upgrade
        {
            get => new UpgradeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ApiRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/setup/api", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="ApiRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/setup/api", rawUrl)
        {
        }
    }
}
