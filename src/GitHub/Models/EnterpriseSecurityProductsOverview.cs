// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace GitHub.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.17.0")]
    #pragma warning disable CS1591
    public partial class EnterpriseSecurityProductsOverview : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The active_committers property</summary>
        public int? ActiveCommitters { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The advanced_security_enabled_repos property</summary>
        public int? AdvancedSecurityEnabledRepos { get; set; }
        /// <summary>The code_scanning_default_setup_eligible_repos property</summary>
        public int? CodeScanningDefaultSetupEligibleRepos { get; set; }
        /// <summary>The code_scanning_default_setup_enabled_repos property</summary>
        public int? CodeScanningDefaultSetupEnabledRepos { get; set; }
        /// <summary>The code_scanning_enabled_repos property</summary>
        public int? CodeScanningEnabledRepos { get; set; }
        /// <summary>The code_scanning_pr_reviews_enabled_repos property</summary>
        public int? CodeScanningPrReviewsEnabledRepos { get; set; }
        /// <summary>The dependabot_alerts_enabled_repos property</summary>
        public int? DependabotAlertsEnabledRepos { get; set; }
        /// <summary>The dependabot_security_updates_enabled_repos property</summary>
        public int? DependabotSecurityUpdatesEnabledRepos { get; set; }
        /// <summary>The dependabot_version_updates_enabled_repos property</summary>
        public int? DependabotVersionUpdatesEnabledRepos { get; set; }
        /// <summary>The maximum_committers property</summary>
        public int? MaximumCommitters { get; set; }
        /// <summary>The nonarchived_repos property</summary>
        public int? NonarchivedRepos { get; set; }
        /// <summary>The purchased_committers property</summary>
        public int? PurchasedCommitters { get; set; }
        /// <summary>The secret_scanning_enabled_repos property</summary>
        public int? SecretScanningEnabledRepos { get; set; }
        /// <summary>The secret_scanning_push_protection_enabled_repos property</summary>
        public int? SecretScanningPushProtectionEnabledRepos { get; set; }
        /// <summary>The total_repos property</summary>
        public int? TotalRepos { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Models.EnterpriseSecurityProductsOverview"/> and sets the default values.
        /// </summary>
        public EnterpriseSecurityProductsOverview()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::GitHub.Models.EnterpriseSecurityProductsOverview"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::GitHub.Models.EnterpriseSecurityProductsOverview CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::GitHub.Models.EnterpriseSecurityProductsOverview();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_committers", n => { ActiveCommitters = n.GetIntValue(); } },
                { "advanced_security_enabled_repos", n => { AdvancedSecurityEnabledRepos = n.GetIntValue(); } },
                { "code_scanning_default_setup_eligible_repos", n => { CodeScanningDefaultSetupEligibleRepos = n.GetIntValue(); } },
                { "code_scanning_default_setup_enabled_repos", n => { CodeScanningDefaultSetupEnabledRepos = n.GetIntValue(); } },
                { "code_scanning_enabled_repos", n => { CodeScanningEnabledRepos = n.GetIntValue(); } },
                { "code_scanning_pr_reviews_enabled_repos", n => { CodeScanningPrReviewsEnabledRepos = n.GetIntValue(); } },
                { "dependabot_alerts_enabled_repos", n => { DependabotAlertsEnabledRepos = n.GetIntValue(); } },
                { "dependabot_security_updates_enabled_repos", n => { DependabotSecurityUpdatesEnabledRepos = n.GetIntValue(); } },
                { "dependabot_version_updates_enabled_repos", n => { DependabotVersionUpdatesEnabledRepos = n.GetIntValue(); } },
                { "maximum_committers", n => { MaximumCommitters = n.GetIntValue(); } },
                { "nonarchived_repos", n => { NonarchivedRepos = n.GetIntValue(); } },
                { "purchased_committers", n => { PurchasedCommitters = n.GetIntValue(); } },
                { "secret_scanning_enabled_repos", n => { SecretScanningEnabledRepos = n.GetIntValue(); } },
                { "secret_scanning_push_protection_enabled_repos", n => { SecretScanningPushProtectionEnabledRepos = n.GetIntValue(); } },
                { "total_repos", n => { TotalRepos = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("active_committers", ActiveCommitters);
            writer.WriteIntValue("advanced_security_enabled_repos", AdvancedSecurityEnabledRepos);
            writer.WriteIntValue("code_scanning_default_setup_eligible_repos", CodeScanningDefaultSetupEligibleRepos);
            writer.WriteIntValue("code_scanning_default_setup_enabled_repos", CodeScanningDefaultSetupEnabledRepos);
            writer.WriteIntValue("code_scanning_enabled_repos", CodeScanningEnabledRepos);
            writer.WriteIntValue("code_scanning_pr_reviews_enabled_repos", CodeScanningPrReviewsEnabledRepos);
            writer.WriteIntValue("dependabot_alerts_enabled_repos", DependabotAlertsEnabledRepos);
            writer.WriteIntValue("dependabot_security_updates_enabled_repos", DependabotSecurityUpdatesEnabledRepos);
            writer.WriteIntValue("dependabot_version_updates_enabled_repos", DependabotVersionUpdatesEnabledRepos);
            writer.WriteIntValue("maximum_committers", MaximumCommitters);
            writer.WriteIntValue("nonarchived_repos", NonarchivedRepos);
            writer.WriteIntValue("purchased_committers", PurchasedCommitters);
            writer.WriteIntValue("secret_scanning_enabled_repos", SecretScanningEnabledRepos);
            writer.WriteIntValue("secret_scanning_push_protection_enabled_repos", SecretScanningPushProtectionEnabledRepos);
            writer.WriteIntValue("total_repos", TotalRepos);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
