// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace GitHub.Models {
    #pragma warning disable CS1591
    public class EnterpriseOverview : IAdditionalDataHolder, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The comments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseCommentOverview? Comments { get; set; }
#nullable restore
#else
        public EnterpriseCommentOverview Comments { get; set; }
#endif
        /// <summary>The gists property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseGistOverview? Gists { get; set; }
#nullable restore
#else
        public EnterpriseGistOverview Gists { get; set; }
#endif
        /// <summary>The hooks property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseHookOverview? Hooks { get; set; }
#nullable restore
#else
        public EnterpriseHookOverview Hooks { get; set; }
#endif
        /// <summary>The issues property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseIssueOverview? Issues { get; set; }
#nullable restore
#else
        public EnterpriseIssueOverview Issues { get; set; }
#endif
        /// <summary>The milestones property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseMilestoneOverview? Milestones { get; set; }
#nullable restore
#else
        public EnterpriseMilestoneOverview Milestones { get; set; }
#endif
        /// <summary>The orgs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseOrganizationOverview? Orgs { get; set; }
#nullable restore
#else
        public EnterpriseOrganizationOverview Orgs { get; set; }
#endif
        /// <summary>The pages property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterprisePageOverview? Pages { get; set; }
#nullable restore
#else
        public EnterprisePageOverview Pages { get; set; }
#endif
        /// <summary>The pulls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterprisePullRequestOverview? Pulls { get; set; }
#nullable restore
#else
        public EnterprisePullRequestOverview Pulls { get; set; }
#endif
        /// <summary>The repos property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseRepositoryOverview? Repos { get; set; }
#nullable restore
#else
        public EnterpriseRepositoryOverview Repos { get; set; }
#endif
        /// <summary>The users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnterpriseUserOverview? Users { get; set; }
#nullable restore
#else
        public EnterpriseUserOverview Users { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="EnterpriseOverview"/> and sets the default values.
        /// </summary>
        public EnterpriseOverview()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="EnterpriseOverview"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static EnterpriseOverview CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new EnterpriseOverview();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"comments", n => { Comments = n.GetObjectValue<EnterpriseCommentOverview>(EnterpriseCommentOverview.CreateFromDiscriminatorValue); } },
                {"gists", n => { Gists = n.GetObjectValue<EnterpriseGistOverview>(EnterpriseGistOverview.CreateFromDiscriminatorValue); } },
                {"hooks", n => { Hooks = n.GetObjectValue<EnterpriseHookOverview>(EnterpriseHookOverview.CreateFromDiscriminatorValue); } },
                {"issues", n => { Issues = n.GetObjectValue<EnterpriseIssueOverview>(EnterpriseIssueOverview.CreateFromDiscriminatorValue); } },
                {"milestones", n => { Milestones = n.GetObjectValue<EnterpriseMilestoneOverview>(EnterpriseMilestoneOverview.CreateFromDiscriminatorValue); } },
                {"orgs", n => { Orgs = n.GetObjectValue<EnterpriseOrganizationOverview>(EnterpriseOrganizationOverview.CreateFromDiscriminatorValue); } },
                {"pages", n => { Pages = n.GetObjectValue<EnterprisePageOverview>(EnterprisePageOverview.CreateFromDiscriminatorValue); } },
                {"pulls", n => { Pulls = n.GetObjectValue<EnterprisePullRequestOverview>(EnterprisePullRequestOverview.CreateFromDiscriminatorValue); } },
                {"repos", n => { Repos = n.GetObjectValue<EnterpriseRepositoryOverview>(EnterpriseRepositoryOverview.CreateFromDiscriminatorValue); } },
                {"users", n => { Users = n.GetObjectValue<EnterpriseUserOverview>(EnterpriseUserOverview.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<EnterpriseCommentOverview>("comments", Comments);
            writer.WriteObjectValue<EnterpriseGistOverview>("gists", Gists);
            writer.WriteObjectValue<EnterpriseHookOverview>("hooks", Hooks);
            writer.WriteObjectValue<EnterpriseIssueOverview>("issues", Issues);
            writer.WriteObjectValue<EnterpriseMilestoneOverview>("milestones", Milestones);
            writer.WriteObjectValue<EnterpriseOrganizationOverview>("orgs", Orgs);
            writer.WriteObjectValue<EnterprisePageOverview>("pages", Pages);
            writer.WriteObjectValue<EnterprisePullRequestOverview>("pulls", Pulls);
            writer.WriteObjectValue<EnterpriseRepositoryOverview>("repos", Repos);
            writer.WriteObjectValue<EnterpriseUserOverview>("users", Users);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
