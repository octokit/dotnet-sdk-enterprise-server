// <auto-generated/>
using GitHub.Enterprise.Announcement;
using GitHub.Enterprise.Settings;
using GitHub.Enterprise.Stats;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace GitHub.Enterprise {
    /// <summary>
    /// Builds and executes requests for operations under \enterprise
    /// </summary>
    public class EnterpriseRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>The announcement property</summary>
        public AnnouncementRequestBuilder Announcement
        {
            get => new AnnouncementRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The settings property</summary>
        public SettingsRequestBuilder Settings
        {
            get => new SettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The stats property</summary>
        public StatsRequestBuilder Stats
        {
            get => new StatsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="EnterpriseRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EnterpriseRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/enterprise", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="EnterpriseRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EnterpriseRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/enterprise", rawUrl)
        {
        }
    }
}
